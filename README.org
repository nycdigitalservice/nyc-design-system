#+title: NYC Design System

** About

The NYC Design System provides a set of components that compose a
CSS/JS library, used to style pages for the City of New York's website
redesign. It is an opinionated set of design decisions made to address
issues facing the City of New York's current website. As such this
library is not intended for general-purpose use, though it can be used
as a reference for other design systems.

This repository is structured in a monorepo style, with library files
all living under the [[file:packages/index.org][packages]] directory. To ease the prototyping and
build process, the [[https://vitejs.dev/][Vite]] development environment is used.

** Principles

*** CUBE CSS

Architect CSS with the [[https://cube.fyi/][CUBE CSS]] methodology, embracing the cascading
nature of CSS to provide progressively enhanced page styling.

*** CSS variables

Use CSS variables as hooks to theme the design system. They can be
used to modify size, space, color and typography.

[[file:packages/variables/variables.org][Learn more about DOF CSS variables]]

*** Intrinsic web design

Breakpoint-based styling modifications are eschewed where possible,
favoring fluid typography and spacing, and modifying component layouts
based on the size of their container, not the viewport.


** Getting Started

If you are interested in utilizing the library, a good starting point
is to review the [[file:packages/index.org][packages documentation]]. There an overview of the
library's architecture is provided and you may browse the available
packages. Each package's documentation contains examples, usage
guidelines, and source code.

** Development

If you would like to contribute to the library, please feel free to
make a pull request.

*** Org

This project utilizes [[https://orgmode.org/index.html][Org Mode]], a plain text file format, to write
code and documentation in a [[https://en.wikipedia.org/wiki/Literate_programming][literate programming]] style. This means the
source of truth for most packages in this repository is in an =.org= file
(typically =README.org=), not the =.css= or =.js= file. *Code written
directly in =.css= or =.js= files may be overwritten by tangling =.org=
files*.

*** Requirements

- [[https://pnpm.io/][pnpm]] package manager
- [[https://www.docker.com/products/docker-desktop/][Docker desktop]] - A docker image containing [[https://www.gnu.org/software/emacs/][GNU Emacs]] is used to
  tangle code from =org= files and build the docs site.

*** Getting started

After cloning the repository, make sure Docker is available and run
=pnpm run build:image= to build the Docker image. Run =pnpm run watch:org=
to watch and tangle org files on save.
